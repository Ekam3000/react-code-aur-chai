import React,{ StrictMode } from "react";
import { createRoot } from "react-dom/client";
import App from "./App.jsx";

function MyApp() {
  return (
    <div>
      <h1>Custom App</h1>
    </div>
  );
}
// const reactElement ={
//     type:'a',
//     props: {
//         href: 'https://google.com',
//         target: '_blank'
//     },
//     children: 'Click me to visit google'
// }

const anotherElement = (
  <a href="https://google.com" target='_blank'>Visit Google</a>
)

const username ='Ekam'
const reactElement2 = React.createElement(
  // type
  'a',
  //props
  {
    href:'https://goodle.com',
    target: '_blank'
  },
  //innerText
  'click me to visit Google - link generated by ',
  username


)
createRoot(document.getElementById("root")).render(
  <StrictMode>
     <App />
    {/* <MyApp />  */}
    {/* MyApp() */}
    {/* Since MyApp is a function and in JS we call function
    by simply writing MyApp() so we can write in this way too*/}

    {/* Note: In JSX, if you want to render a JS variable or expression, you must wrap it in curly braces {} */}
    {/* JSX: X - HTML can be used directly in react, JS - 
    Javascript, need some modification to use JavaScript
    and variable */}
    {anotherElement}
    {/* anotherElement is object in JS so we simply called
    the object */}

    {/* reactElement */}
    {/* calling reactElement will not work here. Because
    we have given key names according to our own choice and 
    we explicitly have defined our own function 'customRender' in
    customReact folder however react internally use different 
    names of key for rendering a html element*/}
    <br/>
    {reactElement2}
  </StrictMode>
);
